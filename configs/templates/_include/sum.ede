{% if type.help %}
{{ type.help }}
{% endif %}
newtype {{ type.name }} = {{ type.name }} { from{{ type.name }} :: Core.Text }
    deriving stock (Core.Show, Core.Read, Core.Eq, Core.Ord, Core.Generic)
    deriving newtype
      ( Core.Hashable
      , Core.ToHttpApiData
      , Core.FromHttpApiData
      , Core.ToJSON
      , Core.ToJSONKey
      , Core.FromJSON
      , Core.FromJSONKey
      )
{% for branch in type.branches %}

{{ branch.value.help }}
pattern {{ branch.value.name }} :: {{ type.name }}
pattern {{ branch.value.name }} = {{ type.name }} "{{ branch.value.value }}"
{% endfor %}

{-# COMPLETE
{% for branch in type.branches %}
  {{ branch.value.name }},
{% endfor %}
  {{ type.name }} #-}
