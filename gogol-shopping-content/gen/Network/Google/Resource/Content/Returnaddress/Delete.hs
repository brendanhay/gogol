{-# LANGUAGE DataKinds          #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE FlexibleInstances  #-}
{-# LANGUAGE NoImplicitPrelude  #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}
{-# LANGUAGE TypeOperators      #-}

{-# OPTIONS_GHC -fno-warn-duplicate-exports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds      #-}
{-# OPTIONS_GHC -fno-warn-unused-imports    #-}

-- |
-- Module      : Network.Google.Resource.Content.Returnaddress.Delete
-- Copyright   : (c) 2015-2016 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Deletes a return address for the given Merchant Center account.
--
-- /See:/ <https://developers.google.com/shopping-content/v2/ Content API for Shopping Reference> for @content.returnaddress.delete@.
module Network.Google.Resource.Content.Returnaddress.Delete
    (
    -- * REST Resource
      ReturnaddressDeleteResource

    -- * Creating a Request
    , returnaddressDelete
    , ReturnaddressDelete

    -- * Request Lenses
    , rdXgafv
    , rdMerchantId
    , rdUploadProtocol
    , rdAccessToken
    , rdUploadType
    , rdReturnAddressId
    , rdCallback
    ) where

import Network.Google.Prelude
import Network.Google.ShoppingContent.Types

-- | A resource alias for @content.returnaddress.delete@ method which the
-- 'ReturnaddressDelete' request conforms to.
type ReturnaddressDeleteResource =
     "content" :>
       "v2.1" :>
         Capture "merchantId" (Textual Word64) :>
           "returnaddress" :>
             Capture "returnAddressId" Text :>
               QueryParam "$.xgafv" Xgafv :>
                 QueryParam "upload_protocol" Text :>
                   QueryParam "access_token" Text :>
                     QueryParam "uploadType" Text :>
                       QueryParam "callback" Text :>
                         QueryParam "alt" AltJSON :> Delete '[JSON] ()

-- | Deletes a return address for the given Merchant Center account.
--
-- /See:/ 'returnaddressDelete' smart constructor.
data ReturnaddressDelete =
  ReturnaddressDelete'
    { _rdXgafv :: !(Maybe Xgafv)
    , _rdMerchantId :: !(Textual Word64)
    , _rdUploadProtocol :: !(Maybe Text)
    , _rdAccessToken :: !(Maybe Text)
    , _rdUploadType :: !(Maybe Text)
    , _rdReturnAddressId :: !Text
    , _rdCallback :: !(Maybe Text)
    }
  deriving (Eq, Show, Data, Typeable, Generic)


-- | Creates a value of 'ReturnaddressDelete' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'rdXgafv'
--
-- * 'rdMerchantId'
--
-- * 'rdUploadProtocol'
--
-- * 'rdAccessToken'
--
-- * 'rdUploadType'
--
-- * 'rdReturnAddressId'
--
-- * 'rdCallback'
returnaddressDelete
    :: Word64 -- ^ 'rdMerchantId'
    -> Text -- ^ 'rdReturnAddressId'
    -> ReturnaddressDelete
returnaddressDelete pRdMerchantId_ pRdReturnAddressId_ =
  ReturnaddressDelete'
    { _rdXgafv = Nothing
    , _rdMerchantId = _Coerce # pRdMerchantId_
    , _rdUploadProtocol = Nothing
    , _rdAccessToken = Nothing
    , _rdUploadType = Nothing
    , _rdReturnAddressId = pRdReturnAddressId_
    , _rdCallback = Nothing
    }


-- | V1 error format.
rdXgafv :: Lens' ReturnaddressDelete (Maybe Xgafv)
rdXgafv = lens _rdXgafv (\ s a -> s{_rdXgafv = a})

-- | The Merchant Center account from which to delete the given return
-- address.
rdMerchantId :: Lens' ReturnaddressDelete Word64
rdMerchantId
  = lens _rdMerchantId (\ s a -> s{_rdMerchantId = a})
      . _Coerce

-- | Upload protocol for media (e.g. \"raw\", \"multipart\").
rdUploadProtocol :: Lens' ReturnaddressDelete (Maybe Text)
rdUploadProtocol
  = lens _rdUploadProtocol
      (\ s a -> s{_rdUploadProtocol = a})

-- | OAuth access token.
rdAccessToken :: Lens' ReturnaddressDelete (Maybe Text)
rdAccessToken
  = lens _rdAccessToken
      (\ s a -> s{_rdAccessToken = a})

-- | Legacy upload protocol for media (e.g. \"media\", \"multipart\").
rdUploadType :: Lens' ReturnaddressDelete (Maybe Text)
rdUploadType
  = lens _rdUploadType (\ s a -> s{_rdUploadType = a})

-- | Return address ID generated by Google.
rdReturnAddressId :: Lens' ReturnaddressDelete Text
rdReturnAddressId
  = lens _rdReturnAddressId
      (\ s a -> s{_rdReturnAddressId = a})

-- | JSONP
rdCallback :: Lens' ReturnaddressDelete (Maybe Text)
rdCallback
  = lens _rdCallback (\ s a -> s{_rdCallback = a})

instance GoogleRequest ReturnaddressDelete where
        type Rs ReturnaddressDelete = ()
        type Scopes ReturnaddressDelete =
             '["https://www.googleapis.com/auth/content"]
        requestClient ReturnaddressDelete'{..}
          = go _rdMerchantId _rdReturnAddressId _rdXgafv
              _rdUploadProtocol
              _rdAccessToken
              _rdUploadType
              _rdCallback
              (Just AltJSON)
              shoppingContentService
          where go
                  = buildClient
                      (Proxy :: Proxy ReturnaddressDeleteResource)
                      mempty
