{-# LANGUAGE DataKinds          #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE FlexibleInstances  #-}
{-# LANGUAGE NoImplicitPrelude  #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}
{-# LANGUAGE TypeOperators      #-}

{-# OPTIONS_GHC -fno-warn-duplicate-exports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds      #-}
{-# OPTIONS_GHC -fno-warn-unused-imports    #-}

-- |
-- Module      : Network.Google.Resource.Content.Returnpolicy.Delete
-- Copyright   : (c) 2015-2016 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Deletes a return policy for the given Merchant Center account.
--
-- /See:/ <https://developers.google.com/shopping-content/v2/ Content API for Shopping Reference> for @content.returnpolicy.delete@.
module Network.Google.Resource.Content.Returnpolicy.Delete
    (
    -- * REST Resource
      ReturnpolicyDeleteResource

    -- * Creating a Request
    , returnpolicyDelete
    , ReturnpolicyDelete

    -- * Request Lenses
    , retXgafv
    , retReturnPolicyId
    , retMerchantId
    , retUploadProtocol
    , retAccessToken
    , retUploadType
    , retCallback
    ) where

import Network.Google.Prelude
import Network.Google.ShoppingContent.Types

-- | A resource alias for @content.returnpolicy.delete@ method which the
-- 'ReturnpolicyDelete' request conforms to.
type ReturnpolicyDeleteResource =
     "content" :>
       "v2.1" :>
         Capture "merchantId" (Textual Word64) :>
           "returnpolicy" :>
             Capture "returnPolicyId" Text :>
               QueryParam "$.xgafv" Xgafv :>
                 QueryParam "upload_protocol" Text :>
                   QueryParam "access_token" Text :>
                     QueryParam "uploadType" Text :>
                       QueryParam "callback" Text :>
                         QueryParam "alt" AltJSON :> Delete '[JSON] ()

-- | Deletes a return policy for the given Merchant Center account.
--
-- /See:/ 'returnpolicyDelete' smart constructor.
data ReturnpolicyDelete =
  ReturnpolicyDelete'
    { _retXgafv :: !(Maybe Xgafv)
    , _retReturnPolicyId :: !Text
    , _retMerchantId :: !(Textual Word64)
    , _retUploadProtocol :: !(Maybe Text)
    , _retAccessToken :: !(Maybe Text)
    , _retUploadType :: !(Maybe Text)
    , _retCallback :: !(Maybe Text)
    }
  deriving (Eq, Show, Data, Typeable, Generic)


-- | Creates a value of 'ReturnpolicyDelete' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'retXgafv'
--
-- * 'retReturnPolicyId'
--
-- * 'retMerchantId'
--
-- * 'retUploadProtocol'
--
-- * 'retAccessToken'
--
-- * 'retUploadType'
--
-- * 'retCallback'
returnpolicyDelete
    :: Text -- ^ 'retReturnPolicyId'
    -> Word64 -- ^ 'retMerchantId'
    -> ReturnpolicyDelete
returnpolicyDelete pRetReturnPolicyId_ pRetMerchantId_ =
  ReturnpolicyDelete'
    { _retXgafv = Nothing
    , _retReturnPolicyId = pRetReturnPolicyId_
    , _retMerchantId = _Coerce # pRetMerchantId_
    , _retUploadProtocol = Nothing
    , _retAccessToken = Nothing
    , _retUploadType = Nothing
    , _retCallback = Nothing
    }


-- | V1 error format.
retXgafv :: Lens' ReturnpolicyDelete (Maybe Xgafv)
retXgafv = lens _retXgafv (\ s a -> s{_retXgafv = a})

-- | Return policy ID generated by Google.
retReturnPolicyId :: Lens' ReturnpolicyDelete Text
retReturnPolicyId
  = lens _retReturnPolicyId
      (\ s a -> s{_retReturnPolicyId = a})

-- | The Merchant Center account from which to delete the given return
-- policy.
retMerchantId :: Lens' ReturnpolicyDelete Word64
retMerchantId
  = lens _retMerchantId
      (\ s a -> s{_retMerchantId = a})
      . _Coerce

-- | Upload protocol for media (e.g. \"raw\", \"multipart\").
retUploadProtocol :: Lens' ReturnpolicyDelete (Maybe Text)
retUploadProtocol
  = lens _retUploadProtocol
      (\ s a -> s{_retUploadProtocol = a})

-- | OAuth access token.
retAccessToken :: Lens' ReturnpolicyDelete (Maybe Text)
retAccessToken
  = lens _retAccessToken
      (\ s a -> s{_retAccessToken = a})

-- | Legacy upload protocol for media (e.g. \"media\", \"multipart\").
retUploadType :: Lens' ReturnpolicyDelete (Maybe Text)
retUploadType
  = lens _retUploadType
      (\ s a -> s{_retUploadType = a})

-- | JSONP
retCallback :: Lens' ReturnpolicyDelete (Maybe Text)
retCallback
  = lens _retCallback (\ s a -> s{_retCallback = a})

instance GoogleRequest ReturnpolicyDelete where
        type Rs ReturnpolicyDelete = ()
        type Scopes ReturnpolicyDelete =
             '["https://www.googleapis.com/auth/content"]
        requestClient ReturnpolicyDelete'{..}
          = go _retMerchantId _retReturnPolicyId _retXgafv
              _retUploadProtocol
              _retAccessToken
              _retUploadType
              _retCallback
              (Just AltJSON)
              shoppingContentService
          where go
                  = buildClient
                      (Proxy :: Proxy ReturnpolicyDeleteResource)
                      mempty
