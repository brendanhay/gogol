#!/usr/bin/env bash

set -euo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")/.."

say() {
  echo >&2 "$@"
}

format_haskell() {
  local -r dir="$1"

  say "Formatting $dir"

  find "$dir" -type f -name '*.cabal' -print0 |
    xargs -0 cabal-fmt --inplace --indent=2

  find "$dir" -type f -name '*.hs' -print0 |
    xargs -0 ormolu --mode=inplace
}

# Export the functions for use in GNU parallel.
export -f say
export -f format_haskell

say "Formatting shell"

find script -type f -print0 |
  xargs -0 shfmt -s -i 2 -ln bash -w

say "Formatting nix"

find . -type f -name '*.nix' -print0 |
  xargs -0 nixpkgs-fmt

say "Formatting haskell"

# Run the format and copy/replace steps in parallel.
parallel --halt-on-error 2 format_haskell ::: core gen examples gogol gogol-*
